0001   0000             ; LCD driver for 6502 KIT
0002   0000             
0003   0000             
0004   0000             
0005   0000             BUSY              .EQU 80H
0006   0000             
0007   0000             ; below LCD's registers are mapped into memory space
0008   0000             
0009   0000             command_write     .EQU 9000H
0010   0000             data_write        .EQU 9001H
0011   0000             command_read      .EQU 9002H
0012   0000             data_read         .EQU 9003H
0013   0000             
0014   0000                              
0015   0000                              .cseg 
0016   0000             
0017   0200             		 .org 200h
0018   0200             
0019   0200 4C 5A 02    		 jmp main
0020   0203             
0021   0203             
0022   0203             ; wait until LCD ready bit set
0023   0203             
0024   0203 48          LcdReady         PHA
0025   0204 AD 02 90    ready           LDA command_read
0026   0207 29 80                        AND #BUSY
0027   0209 D0 F9                        BNE ready   ; loop if busy flag = 1
0028   020B 68                           PLA
0029   020C 60          		 RTS
0030   020D             		
0031   020D             
0032   020D             LCD_command_write 
0033   020D 20 03 02                       JSR LcdReady
0034   0210 8D 00 90                       STA command_write
0035   0213 60          		   RTS
0036   0214                               
0037   0214             
0038   0214 20 03 02    LCD_data_write  JSR LcdReady
0039   0217 8D 01 90                    STA data_write
0040   021A 60                          RTS
0041   021B             
0042   021B             
0043   021B 20 03 02    clr_screen       JSR LcdReady
0044   021E A9 01                        LDA #1
0045   0220 20 0D 02    		 JSR LCD_command_write
0046   0223 60                           RTS
0047   0224             
0048   0224 A9 38       InitLcd          LDA #38H
0049   0226 20 0D 02                     JSR LCD_command_write
0050   0229 A9 0C                        LDA #0CH
0051   022B 20 0D 02    	         JSR LCD_command_write
0052   022E 20 1B 02                     JSR clr_screen
0053   0231 A2 00                        LDX #0
0054   0233 A0 00       		 LDY #0
0055   0235 20 39 02    		 JSR goto_xy
0056   0238 60                           RTS
0057   0239             		
0058   0239             
0059   0239             ; goto_xy(x,y)
0060   0239             ; entry: A = y position
0061   0239             ;        B = x position
0062   0239             
0063   0239 8A          goto_xy          TXA
0064   023A C9 00                        CMP #0
0065   023C D0 08       		 BNE case1
0066   023E 98                           TYA
0067   023F 18          		 CLC
0068   0240 69 80                        ADC #80H
0069   0242 20 0D 02                     JSR LCD_command_write
0070   0245 60          		 RTS
0071   0246                              
0072   0246 C9 01       case1            CMP #1
0073   0248 D0 08                        BNE case2
0074   024A 98                           TYA
0075   024B 18          		 CLC
0076   024C 69 C0       		 ADC #0C0H
0077   024E 20 0D 02    		 JSR LCD_command_write
0078   0251 60          		 RTS
0079   0252                              
0080   0252 60          case2           RTS
0081   0253             
0082   0253             
0083   0253             
0084   0253             ; write ASCII code to LCD at current position
0085   0253             ; entry: A
0086   0253             
0087   0253 20 03 02    putch_lcd       JSR LcdReady
0088   0256 20 14 02                    JSR LCD_data_write
0089   0259 60                          RTS
0090   025A             		
0091   025A             
0092   025A             
0093   025A 20 24 02    main            JSR InitLcd
0094   025D A9 36                       LDA #'6'
0095   025F 20 53 02    		JSR putch_lcd
0096   0262 A9 35       		LDA #'5'
0097   0264 20 53 02    		JSR putch_lcd
0098   0267 A9 30       		LDA #'0'
0099   0269 20 53 02    		JSR putch_lcd
0100   026C A9 32       		LDA #'2'
0101   026E 20 53 02    		JSR putch_lcd
0102   0271 A9 20       		LDA #' '
0103   0273 20 53 02    		JSR putch_lcd
0104   0276 A9 4B       		LDA #'K'
0105   0278 20 53 02    		JSR putch_lcd
0106   027B A9 69       		LDA #'i'
0107   027D 20 53 02    		JSR putch_lcd
0108   0280 A9 74       		LDA #'t'
0109   0282 20 53 02    		JSR putch_lcd
0110   0285 A9 20                       LDA #' '
0111   0287 20 53 02    		JSR putch_lcd
0112   028A A9 4F                       LDA #'O'
0113   028C 20 53 02    		JSR putch_lcd
0114   028F A9 6E                       LDA #'n'
0115   0291 20 53 02    		JSR putch_lcd
0116   0294 A9 6C                       LDA #'l'
0117   0296 20 53 02    		JSR putch_lcd
0118   0299 A9 79                       LDA #'y'
0119   029B 20 53 02    		JSR putch_lcd
0120   029E A9 20                       LDA #' '
0121   02A0 20 53 02    		JSR putch_lcd
0122   02A3 A9 24                       LDA #'$'
0123   02A5 20 53 02    		JSR putch_lcd
0124   02A8 A9 31                       LDA #'1'
0125   02AA 20 53 02    		JSR putch_lcd
0126   02AD             
0127   02AD A9 33                       LDA #'3'
0128   02AF 20 53 02    		JSR putch_lcd
0129   02B2 A9 30                       LDA #'0'
0130   02B4 20 53 02    		JSR putch_lcd
0131   02B7             
0132   02B7             
0133   02B7 A0 00                       LDY #0
0134   02B9 A2 01                       LDX #1
0135   02BB 20 39 02                    JSR goto_xy
0136   02BE             
0137   02BE A9 38                       LDA #'8'
0138   02C0 20 53 02    		JSR putch_lcd
0139   02C3 A9 20                       LDA #' '
0140   02C5 20 53 02    		JSR putch_lcd
0141   02C8 A9 62                       LDA #'b'
0142   02CA 20 53 02    		JSR putch_lcd
0143   02CD A9 6F                       LDA #'o'
0144   02CF 20 53 02    		JSR putch_lcd
0145   02D2 A9 61                       LDA #'a'
0146   02D4 20 53 02    		JSR putch_lcd
0147   02D7 A9 72                       LDA #'r'
0148   02D9 20 53 02    		JSR putch_lcd
0149   02DC A9 64                       LDA #'d'
0150   02DE 20 53 02    		JSR putch_lcd
0151   02E1 A9 73                       LDA #'s'
0152   02E3 20 53 02    		JSR putch_lcd
0153   02E6 A9 20                       LDA #' '
0154   02E8 20 53 02    		JSR putch_lcd
0155   02EB A9 6C                       LDA #'l'
0156   02ED 20 53 02    		JSR putch_lcd
0157   02F0 A9 65                       LDA #'e'
0158   02F2 20 53 02    		JSR putch_lcd
0159   02F5 A9 66                       LDA #'f'
0160   02F7 20 53 02    		JSR putch_lcd
0161   02FA A9 74                       LDA #'t'
0162   02FC 20 53 02    		JSR putch_lcd
0163   02FF             
0164   02FF             
0165   02FF 00          		brk
0166   0300             
0167   0300             
0168   0300             		.END
0169   0300             
0170   0300             
0171   0300             
0172   0300             
0173   0300                            
tasm: Number of errors = 0
